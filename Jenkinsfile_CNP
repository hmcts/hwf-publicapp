#!groovy

@Library("Infrastructure")

def type = "ruby"
def product = "help-with-fees"
def component = "application"

def rubyBuilder = new uk.gov.hmcts.contino.RubyBuilder(this)
def yarnBuilder = new uk.gov.hmcts.contino.YarnBuilder(this)

withPipeline(type, product, component) {
    env.RAILS_ENV = 'test'
    env.RACK_ENV = 'test'
    // random free port should probably be used instead
    env.GOVUK_NOTIFY_API_KEY = 'mocked_in_tests'

     before('test') {
        sh script:"docker-compose -f docker-compose-test.yml run --rm test", label: 'Start test docker'
    }

    // afterAlways('test') {
    //     sh script: "docker stop pet-et-et1-test-postgres && docker rm pet-et-et1-test-postgres || echo 'Ignoring failure in stopping postgres'",
    //         label: "docker stop pet-et-et1-test-postgres"
    // }
}

