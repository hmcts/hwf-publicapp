
import scala.concurrent.duration._

import io.gatling.core.Predef._
import io.gatling.http.Predef._
import io.gatling.jdbc.Predef._

class RecordedSimulation extends Simulation {

	val httpProtocol = http
		.baseURL("http://localhost:3000")
		.inferHtmlResources()
		.acceptHeader("text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8")
		.acceptEncodingHeader("gzip, deflate")
		.acceptLanguageHeader("en-US,en;q=0.5")
		.userAgentHeader("Mozilla/5.0 (Macintosh; Intel Mac OS X 10.12; rv:54.0) Gecko/20100101 Firefox/54.0")

	val headers_0 = Map("Upgrade-Insecure-Requests" -> "1")

	val headers_1 = Map(
		"Accept" -> "*/*",
		"Pragma" -> "no-cache")

    val uri2 = "http://detectportal.firefox.com/success.txt"

	val scn = scenario("RecordedSimulation")
		.exec(http("request_0")
			.get("/session/start?locale=en")
			.headers(headers_0)
			.resources(http("request_1")
			.get(uri2 + "")
			.headers(headers_1)))
		.pause(5)
		.exec(http("request_2")
			.post("/questions/form_name?locale=en")
			.headers(headers_0)
			.formParam("utf8", "✓")
			.formParam("_method", "put")
			.formParam("authenticity_token", "O5nABev0Dw9HWJBfEgILalKD7aWP7TX+hi2r53caKuVhOZD5LLExxu+lMjsbL7XyM3h/89gGdkw2eTvJJUw2aA==")
			.formParam("form_name[identifier]", "")
			.formParam("form_name[unknown]", "0")
			.formParam("form_name[et]", "0")
			.formParam("form_name[et]", "1")
			.formParam("commit", "Continue")
			.resources(http("request_3")
			.get(uri2 + "")
			.headers(headers_1)))
		.pause(3)
		.exec(http("request_4")
			.post("/questions/fee?locale=en")
			.headers(headers_0)
			.formParam("utf8", "✓")
			.formParam("_method", "put")
			.formParam("authenticity_token", "cEBToiG3WzMyKY3A1H4AwnDrACr6HFtPtmHAD+tE5HAq4ANe5vJl+prUL6TdU75aERCSfK33GP0GNVAhuRL4/Q==")
			.formParam("fee[paid]", "")
			.formParam("fee[paid]", "false")
			.formParam("fee[date_paid]", "")
			.formParam("commit", "Continue")
			.resources(http("request_5")
			.get(uri2 + "")
			.headers(headers_1)))
		.pause(8)
		.exec(http("request_6")
			.post("/questions/marital_status?locale=en")
			.headers(headers_0)
			.formParam("utf8", "✓")
			.formParam("_method", "put")
			.formParam("authenticity_token", "iqfanj1SqbKcuPHHRm0cug/TQ7JjmZg04PZEFO6mN+3QB4pi+heXezRFU6NPQKIibijR5DRy24ZQotQ6vPArYA==")
			.formParam("marital_status[married]", "")
			.formParam("marital_status[married]", "false")
			.formParam("commit", "Continue")
			.resources(http("request_7")
			.get(uri2 + "")
			.headers(headers_1)))
		.pause(2)
		.exec(http("request_8")
			.post("/questions/savings_and_investment?locale=en")
			.headers(headers_0)
			.formParam("utf8", "✓")
			.formParam("_method", "put")
			.formParam("authenticity_token", "v7donguxgouZsnm//m+DnknCEfB2o2i/3AcCnay9NUrlFzhizPS8QjFP29v3Qj0GKDmDpiFIKw1sU5Kz/uspxw==")
			.formParam("savings_and_investment[choice]", "")
			.formParam("savings_and_investment[choice]", "between")
			.formParam("commit", "Continue")
			.resources(http("request_9")
			.get(uri2 + "")
			.headers(headers_1)))
		.pause(9)
		.exec(http("request_10")
			.post("/questions/savings_and_investment_extra?locale=en")
			.headers(headers_0)
			.formParam("utf8", "✓")
			.formParam("_method", "put")
			.formParam("authenticity_token", "dfvbKP9PS7jtdfqvVEuPwPNoPRnrCNyJpKobUOHrLQQvW4vUOAp1cUWIWMtdZjFYkpOvT7zjnzsU/ot+s70xiQ==")
			.formParam("savings_and_investment_extra[over_61]", "")
			.formParam("savings_and_investment_extra[over_61]", "false")
			.formParam("savings_and_investment_extra[amount]", "3000")
			.formParam("commit", "Continue")
			.resources(http("request_11")
			.get(uri2 + "")
			.headers(headers_1)))
		.pause(3)
		.exec(http("request_12")
			.post("/questions/benefit?locale=en")
			.headers(headers_0)
			.formParam("utf8", "✓")
			.formParam("_method", "put")
			.formParam("authenticity_token", "Zq9tzMPYSxsj8PX6IBsbe0IsfG7lycAivZxlkZchGlA8Dz0wBJ110osNV54pNqXjI9fuOLIig5ANyPW/xXcG3Q==")
			.formParam("benefit[on_benefits]", "")
			.formParam("benefit[on_benefits]", "false")
			.formParam("commit", "Continue")
			.resources(http("request_13")
			.get(uri2 + "")
			.headers(headers_1)))
		.pause(3)
		.exec(http("request_14")
			.post("/questions/dependent?locale=en")
			.headers(headers_0)
			.formParam("utf8", "✓")
			.formParam("_method", "put")
			.formParam("authenticity_token", "30qyeTKpG3UpPzgaUGkQw17MSr8b1CN7Tl10idITxlOF6uKF9ewlvIHCmn5ZRK5bPzfY6Uw/YMn+CeSngEXa3g==")
			.formParam("dependent[children]", "false")
			.formParam("dependent[children_number]", "")
			.formParam("commit", "Continue")
			.resources(http("request_15")
			.get(uri2 + "")
			.headers(headers_1)))
		.pause(2)
		.exec(http("request_16")
			.post("/questions/income_kind?locale=en")
			.headers(headers_0)
			.formParam("utf8", "✓")
			.formParam("_method", "put")
			.formParam("authenticity_token", "vGQi+N57XLxFbAECbUlAYTvZmTdId/nEWOmYt6YtPp/mxHIEGT5ide2Ro2ZkZP75WiILYR+cunbovQiZ9HsiEg==")
			.formParam("income_kind[applicant][]", "")
			.formParam("income_kind[partner][]", "")
			.formParam("income_kind[applicant][]", "1")
			.formParam("commit", "Continue")
			.resources(http("request_17")
			.get(uri2 + "")
			.headers(headers_1)))
		.pause(2)
		.exec(http("request_18")
			.post("/questions/income_range?locale=en")
			.headers(headers_0)
			.formParam("utf8", "✓")
			.formParam("_method", "put")
			.formParam("authenticity_token", "hBoYJ+um5jQVtuuTDwAWKjAnmNc19gzhsnwz3c7yhSzeukjbLOPY/b1LSfcGLaiyUdwKgWIdT1MCKKPznKSZoQ==")
			.formParam("income_range[choice]", "")
			.formParam("income_range[choice]", "less")
			.formParam("commit", "Continue")
			.resources(http("request_19")
			.get(uri2 + "")
			.headers(headers_1)))
		.pause(4)
		.exec(http("request_20")
			.post("/questions/claim?locale=en")
			.headers(headers_0)
			.formParam("utf8", "✓")
			.formParam("_method", "put")
			.formParam("authenticity_token", "DXLrDMayQ/epj5gnxHK6xcoP026U6U5/gF9g8SfItolX0rvwAfd9PgFyOkPNXwRdq/RBOMMCDc0wC/DfdZ6qBA==")
			.formParam("claim/et[identifier]", "rewrqr")
			.formParam("commit", "Continue")
			.resources(http("request_21")
			.get(uri2 + "")
			.headers(headers_1)))
		.pause(9)
		.exec(http("request_22")
			.post("/questions/national_insurance?locale=en")
			.headers(headers_0)
			.formParam("utf8", "✓")
			.formParam("_method", "put")
			.formParam("authenticity_token", "CkbQe9XcZfUQiUE7D9h7Wm/62JuN8pn3cOhVRokbP3BQ5oCHEplbPLh0418G9cXCDgFKzdoZ2kXAvMVo200j/Q==")
			.formParam("national_insurance[number]", "JR043907D")
			.formParam("commit", "Continue")
			.resources(http("request_23")
			.get(uri2 + "")
			.headers(headers_1)))
		.pause(7)
		.exec(http("request_24")
			.post("/questions/dob?locale=en")
			.headers(headers_0)
			.formParam("utf8", "✓")
			.formParam("_method", "put")
			.formParam("authenticity_token", "RwScl7IfyrkYO2RjLVN6aFhQ/vlpr3rECwnMu3kiPBodpMxrdVr0cLDGxgckfsTwOatsrz5EOXa7XVyVK3Qglw==")
			.formParam("dob[date_of_birth]", "07/01/1955")
			.formParam("commit", "Continue")
			.resources(http("request_25")
			.get(uri2 + "")
			.headers(headers_1)))
		.pause(16)
		.exec(http("request_26")
			.post("/questions/personal_detail?locale=en")
			.headers(headers_0)
			.formParam("utf8", "✓")
			.formParam("_method", "put")
			.formParam("authenticity_token", "Krzrm8bLD2ANh7vTwIDTQaBof0/Ylb9F+ng1xztCRShwHLtnAY4xqaV6GbfJrW3ZwZPtGY9+/PdKLKXpaRRZpQ==")
			.formParam("personal_detail[title]", "Ms")
			.formParam("personal_detail[first_name]", "Alexa")
			.formParam("personal_detail[last_name]", "Smith")
			.formParam("commit", "Continue")
			.resources(http("request_27")
			.get(uri2 + "")
			.headers(headers_1)))
		.pause(25)
		.exec(http("request_28")
			.post("/questions/applicant_address?locale=en")
			.headers(headers_0)
			.formParam("utf8", "✓")
			.formParam("_method", "put")
			.formParam("authenticity_token", "0kJcPfYR4sVV70o2SnzWUGuLdZchoJWw7zRV16iIXTKI4gzBMVTcDP0S6FJDUWjICnDnwXZL1gJfYMX5+t5Bvw==")
			.formParam("applicant_address[address]", """14 Springfield Court
Ilford""")
			.formParam("applicant_address[postcode]", "IG1 2BN")
			.formParam("commit", "Continue")
			.resources(http("request_29")
			.get(uri2 + "")
			.headers(headers_1)))
		.pause(4)
		.exec(http("request_30")
			.post("/questions/contact?locale=en")
			.headers(headers_0)
			.formParam("utf8", "✓")
			.formParam("_method", "put")
			.formParam("authenticity_token", "ZCuIJ/f1HirKW6Xp+hWrLhhPmamV/FKAcpSpMkO9W3s+i9jbMLAg42KmB43zOBW2ebQL/8IXETLCwDkcEetH9g==")
			.formParam("contact[email]", "")
			.formParam("contact[feedback_opt_in]", "0")
			.formParam("commit", "Continue")
			.resources(http("request_31")
			.get(uri2 + "")
			.headers(headers_1)))

	setUp(scn.inject(atOnceUsers(1))).protocols(httpProtocol)
}